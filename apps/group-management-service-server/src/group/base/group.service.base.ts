/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Group as PrismaGroup } from "@prisma/client";

export class GroupServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GroupCountArgs, "select">): Promise<number> {
    return this.prisma.group.count(args);
  }

  async groups(args: Prisma.GroupFindManyArgs): Promise<PrismaGroup[]> {
    return this.prisma.group.findMany(args);
  }
  async group(args: Prisma.GroupFindUniqueArgs): Promise<PrismaGroup | null> {
    return this.prisma.group.findUnique(args);
  }
  async createGroup(args: Prisma.GroupCreateArgs): Promise<PrismaGroup> {
    return this.prisma.group.create(args);
  }
  async updateGroup(args: Prisma.GroupUpdateArgs): Promise<PrismaGroup> {
    return this.prisma.group.update(args);
  }
  async deleteGroup(args: Prisma.GroupDeleteArgs): Promise<PrismaGroup> {
    return this.prisma.group.delete(args);
  }
}
