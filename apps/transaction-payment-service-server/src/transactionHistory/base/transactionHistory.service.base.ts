/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TransactionHistory as PrismaTransactionHistory,
} from "@prisma/client";

export class TransactionHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TransactionHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.transactionHistory.count(args);
  }

  async transactionHistories(
    args: Prisma.TransactionHistoryFindManyArgs
  ): Promise<PrismaTransactionHistory[]> {
    return this.prisma.transactionHistory.findMany(args);
  }
  async transactionHistory(
    args: Prisma.TransactionHistoryFindUniqueArgs
  ): Promise<PrismaTransactionHistory | null> {
    return this.prisma.transactionHistory.findUnique(args);
  }
  async createTransactionHistory(
    args: Prisma.TransactionHistoryCreateArgs
  ): Promise<PrismaTransactionHistory> {
    return this.prisma.transactionHistory.create(args);
  }
  async updateTransactionHistory(
    args: Prisma.TransactionHistoryUpdateArgs
  ): Promise<PrismaTransactionHistory> {
    return this.prisma.transactionHistory.update(args);
  }
  async deleteTransactionHistory(
    args: Prisma.TransactionHistoryDeleteArgs
  ): Promise<PrismaTransactionHistory> {
    return this.prisma.transactionHistory.delete(args);
  }
}
