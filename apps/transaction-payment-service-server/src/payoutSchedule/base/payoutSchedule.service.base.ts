/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PayoutSchedule as PrismaPayoutSchedule } from "@prisma/client";

export class PayoutScheduleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PayoutScheduleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.payoutSchedule.count(args);
  }

  async payoutSchedules(
    args: Prisma.PayoutScheduleFindManyArgs
  ): Promise<PrismaPayoutSchedule[]> {
    return this.prisma.payoutSchedule.findMany(args);
  }
  async payoutSchedule(
    args: Prisma.PayoutScheduleFindUniqueArgs
  ): Promise<PrismaPayoutSchedule | null> {
    return this.prisma.payoutSchedule.findUnique(args);
  }
  async createPayoutSchedule(
    args: Prisma.PayoutScheduleCreateArgs
  ): Promise<PrismaPayoutSchedule> {
    return this.prisma.payoutSchedule.create(args);
  }
  async updatePayoutSchedule(
    args: Prisma.PayoutScheduleUpdateArgs
  ): Promise<PrismaPayoutSchedule> {
    return this.prisma.payoutSchedule.update(args);
  }
  async deletePayoutSchedule(
    args: Prisma.PayoutScheduleDeleteArgs
  ): Promise<PrismaPayoutSchedule> {
    return this.prisma.payoutSchedule.delete(args);
  }
}
