/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Fee as PrismaFee } from "@prisma/client";

export class FeeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FeeCountArgs, "select">): Promise<number> {
    return this.prisma.fee.count(args);
  }

  async fees(args: Prisma.FeeFindManyArgs): Promise<PrismaFee[]> {
    return this.prisma.fee.findMany(args);
  }
  async fee(args: Prisma.FeeFindUniqueArgs): Promise<PrismaFee | null> {
    return this.prisma.fee.findUnique(args);
  }
  async createFee(args: Prisma.FeeCreateArgs): Promise<PrismaFee> {
    return this.prisma.fee.create(args);
  }
  async updateFee(args: Prisma.FeeUpdateArgs): Promise<PrismaFee> {
    return this.prisma.fee.update(args);
  }
  async deleteFee(args: Prisma.FeeDeleteArgs): Promise<PrismaFee> {
    return this.prisma.fee.delete(args);
  }
}
